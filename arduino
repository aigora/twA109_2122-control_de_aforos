enum Estados{MODO_ALARMA_ON,MODO_ALARMA_OFF};
enum Encuentras{LED_V_ON,LED_R_ON,LEDS_OFF};
Estados estado=MODO_ALARMA_OFF;
Encuentras encuentra=LEDS_OFF;
const int alarma=9;
const int verde=10,rojo=12;
int duracion=5000;
String mensaje_salida;
int mensaje_entrada;


void setup() {
  Serial.begin(9600);
  pinMode(alarma,OUTPUT); // definir pin como salida 
  pinMode(verde,OUTPUT);
  pinMode(rojo,OUTPUT);
}

void loop() {

  procesar_mensajes();

  switch (estado)
  {
    case MODO_ALARMA_ON:
    modo_alarma(5.0,15.0,2000,3000,1);
    digitalWrite(alarma,HIGH);
    delay(duracion);
    estado=MODO_ALARMA_OFF;
    break;

    case MODO_ALARMA_OFF:
    modo_alarma(5.0,15.0,2000,3000,0);
    digitalWrite(alarma,LOW);
    delay(duracion);
    break;
  }

  switch (encuentra)
  {
    case LED_V_ON:
    digitalWrite(verde,HIGH); 
    delay(duracion); 
    digitalWrite(rojo,LOW);
    encuentra=LEDS_OFF;
    break;

    case LED_R_ON:
    digitalWrite(verde,LOW); 
    delay(duracion); 
    digitalWrite(rojo,HIGH);
    encuentra=LEDS_OFF;
    break;
  }
}

void procesar_mensajes(void)
{
  if(Serial.available()>0)
  {
    mensaje_entrada=Serial.readStringUntil('\n');

    if(mensaje_entrada>aforo)
    {
    estado=MODO_ALARMA_ON;
    encuentra=LED_R_ON;
    mensaje_salida="Aforo Completo";
    Serial.println(mensaje_salida);
    }
    else 
    estado=MODO_ALARMA_OFF;
    encuentra=LED_V_ON;
  }
}
